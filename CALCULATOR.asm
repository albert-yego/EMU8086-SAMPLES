ORG 100H

.data
TEXT1 DB 'Enter first operand: $'
TEXT2 DB 'Enter second operand: $'
TEXT3 DB 'Enter operator: $'
TEXT4 DB ' Unknown operator $'
first DB ?
second DB ? 
operator DB ? 
result DW ?
ASCIIPOS DW ?
ASCIIPOS2 DW ? 
TEMP DB 10 
ARRAY DB ?
rem DB ?
overflow DB 00h

.code
MOV AX, @data
MOV DS, AX
MOV ES, AX

FIRSTOP:
LEA DX, TEXT1 
MOV AH, 9
INT 21H
CALL SCAN
MOV first, CL
CALL NEXT  

SECONDOP:
LEA DX, TEXT2 
MOV AH, 9
INT 21H
CALL SCAN1
MOV second, CL
CALL NEXT

OPP:
LEA DX, TEXT3 
MOV AH, 9
INT 21H
MOV AH, 1
INT 21H
MOV operator, AL
CMP AL, '+'
JE ADDITION
CMP AL, '-'
JE SUBTRACTION
CMP AL, '/'
JE DIVISION
CMP AL,'*'
JE MULTIPLICATION
LEA DX, TEXT4 
MOV AH, 9
INT 21H 
CALL NEXT
JMP OPP

ADDITION:
MOV DX, ASCIIPOS
OUT DX, AL 
MOV AH, 0
MOV AL, first
ADD AL, second
MOV AH, 0 
MOV result, AX
MOV DX, ASCIIPOS2
MOV AL,'='
OUT DX,AL
INC DX
MOV ASCIIPOS2,DX
MOV AX, result
CALL FINAL
CALL NEXT
JMP FIRSTOP

SUBTRACTION:
CLC
MOV DX, ASCIIPOS
OUT DX, AL
MOV AH, 0
MOV AL, first
SUB AL, second 
JC CARRY2
JMP SAB
SAB:
MOV AH, 0 
MOV result, AX
MOV DX, ASCIIPOS2
MOV AL,'='
OUT DX,AL
INC DX 
MOV AL, overflow
CMP AL, 01H
JE MINU
JMP JK
JK:
MOV ASCIIPOS2,DX
MOV AX, result 
CALL FINAL
CALL NEXT
JMP FIRSTOP
MINU:
MOV AL, first
MOV AH, second
CMP AL, AH
JB MINUS
INC DX
JMP JK
MINUS:
MOV AL,'-'
OUT DX,AL
INC DX
JMP JK
CARRY2: 
NEG AL
MOV overflow,01h
JMP SAB

DIVISION:
MOV DX, ASCIIPOS
OUT DX, AL
MOV AH, 0
MOV AL, first
DIV second 
CMP AH, 0
JNE REMAINDER
MOV AH, 0
MOV result, AX
MOV DX, ASCIIPOS2
MOV AL,'='
OUT DX,AL
INC DX
MOV ASCIIPOS2,DX
MOV AX, result
CALL FINAL
CALL NEXT
JMP FIRSTOP

REMAINDER:
MOV rem, AH
MOV AH, 0
MOV result, AX
MOV DX, ASCIIPOS2
MOV AL,'='
OUT DX,AL
INC DX
MOV ASCIIPOS2,DX
MOV AX, result
CALL FINAL
INC DX
MOV AL, 'R'
OUT DX, AL
INC DX
INC DX 
MOV ASCIIPOS2, DX
MOV AL, rem
MOV AH,0
CALL FINAL
CALL NEXT
JMP FIRSTOP 

MULTIPLICATION:
MOV DX, ASCIIPOS
OUT DX, AL
MOV AH, 0
MOV AL, first
MUL second  
MOV result, AX 
MOV DX, ASCIIPOS2
MOV AL,'='
OUT DX,AL
INC DX
MOV ASCIIPOS2,DX 
MOV AX, result
CALL FINAL
CALL NEXT
JMP FIRSTOP
 
FINAL PROC
MOV SI,1000H
MOV word ptr[SI],AX
MOV SI,2000H
MOV WORD PTR[SI],0000H
MOV CX, 0AH
JMP L3
L3:
MOV DX, 00H
DIV CX
MOV ARRAY[SI], DL 
INC SI
CMP AX,CX
JAE L3 
MOV ARRAY[SI], AL
MOV DX, ASCIIPOS2
JMP L5 
L5:
MOV AL, ARRAY[SI]
ADD AL, '0'
OUT DX, AL
INC DX
DEC SI
CMP SI, 2000H
JAE L5
RET
FINAL ENDP

NEXT PROC
MOV DX, 10
MOV AH, 2
INT 21H
MOV DX, 13
MOV AH, 2
INT 21H
RET
NEXT ENDP 

SCAN PROC
MOV	DX , 2040h
MOV	CL , 0
L1:	
MOV	AH , 1
INT	21H
CMP	AL , 0DH
JE	PRO
CMP AL, '0'
JB CHECK 
CMP AL, '9'
JA CHECK
AND	AL , 0FH
MOV	CH , AL
MOV	AL , CL
MUL	TEMP
ADD	AL , CH
MOV	CL , AL
CALL ASCII
JMP	L1
SCAN ENDP

CHECK:
CALL NEXT
JMP FIRSTOP
RET

ASCII PROC
ADD CH, '0'
MOV AL, CH
OUT DX, AL
INC DX
MOV ASCIIPOS, DX
RET
ASCII ENDP

SCAN1 PROC
MOV DX, ASCIIPOS
INC DX
MOV	CL , 0
L2:	
MOV	AH , 1
INT	21H
CMP	AL , 0DH
JE	PRO
CMP AL, '0'
JB CHECK1 
CMP AL, '9'
JA CHECK1
AND	AL , 0FH
MOV	CH , AL
MOV	AL , CL
MUL	TEMP
ADD	AL , CH
MOV	CL , AL 
CALL ASCII2
JMP	L2
SCAN1 ENDP

ASCII2 PROC
ADD CH, '0'
MOV AL, CH
OUT DX, AL
INC DX
MOV ASCIIPOS2, DX
RET
ASCII2 ENDP

CHECK1:
CALL NEXT
JMP SECONDOP
RET 

PRO:
RET 